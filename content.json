{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-10-08T15:59:23.150Z","updated":"2019-10-08T15:59:23.150Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Welcome My Blog 勤奋好学、品学兼优、乐观向上、爱好广泛、尊敬师长、团结同学、做事执着、有毅力、是一个德、智、体、美、劳全面发展的好学生。我有一颗善良真诚的心灵。有人说，金子是最纯美的，但比金子更美的是人的心灵。我有一颗洁白无暇、善良真诚的心灵，我心地善良、追求纯真、无私无邪。在家里，对待亲人，关注亲人的冷暖，经常帮助爸爸妈妈做一些力所能及的家务活，打扫卫生，让亲情其乐融融。在学校，我有一颗真诚的爱心。对于困难同学，我总是乐于伸出援助的小手，助人为乐，真诚奉献，对于学习上的后进生，我也是及时给予力所能及的帮助，从不计较个人的得失。"},{"title":"读书","date":"2019-10-01T05:07:01.805Z","updated":"2019-10-01T05:07:01.805Z","comments":true,"path":"reading/index.html","permalink":"http://yoursite.com/reading/index.html","excerpt":"","text":""}],"posts":[{"title":"H5C3-13","slug":"H5C3-13","date":"2019-10-16T12:18:13.000Z","updated":"2019-10-16T12:20:46.222Z","comments":true,"path":"2019/10/16/H5C3-13/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-13/","excerpt":"","text":"响应式布局布局类别介绍 固定网页布局12&gt; 通常设置一个固定的宽度,以px为单位,常见与PC端页面&gt; 流式布局,伸缩布局(移动端)12&gt; 为网页设置一个相对宽度,通常以百分比为单位.&gt; 响应式布局12345678&gt; 通过检测设备信息,决定布局方式,一般通过检测设备的宽度.&gt; &gt; 本质:&gt; 通过检查设备宽,根据设备宽(高度)不一样,实现网页布局效果不一样.&gt; &gt; &gt; 核心: 检查设备 ----&gt; 媒体查询&gt; 栅格化布局[相应式布局]12&gt; 将网页人为的划分为均等的长度,然后排版布局,通常以百分比为单位&gt; 响应式布局 实现方式12&gt; 一个网页,需要在不同设备上正常显示,可以利用媒体查询的方式,检测不同设备,设置不同的CSS代码实现.&gt; 响应式布局核心12&gt; 检测不同设备宽度&gt; 设备屏幕大小一般尺寸12345678&gt; 大屏幕: 大于等于1200px(min-width: 1200px) PC端&gt; &gt; 默认: 大于等于980px(min-width: 980px)&gt; &gt; 平板: 大于等于768px(min-width: 768px) &gt; &gt; 手机: 小于等于480px(min-width: 414px)&gt; 响应式布局对应的条件设置12345678&gt; @media only screen and (min-width: 1200px) &#123;&#125;&gt; &gt; @media only screen and (min-width: 980px) &#123;&#125;&gt; &gt; @media only screen and (min-width: 768px) &#123;&#125;&gt; &gt; @media only screen and (max-width: 480px) &#123;&#125;&gt; 微金所案例CSS框架介绍什么是CSS框架? 1234567&gt; 随着Web应用变的越来越复杂，在大量的开发过程中我们发现有许多功能模块非常相似，&gt; 比如轮播图、分页、选项卡、导航栏等，开发中往往会把这些具有通用性的功能模块进行一系列封装，&gt; 使之成为一个个组件应用到项目中，可以极大的节约开发成本，将这些通用的组件缩合到一起就形成了前端框架.&gt; &gt; 总结:&gt; CSS框架就是对CSS相同功能的整体封装.方便使用.&gt; 框架介绍 Amaze UI(了解)12&gt; http://amazeui.org/&gt; Framework7(了解)12&gt; http://framework7.taobao.org/&gt; Bootstrap[Bootstrap 是移动设备优先的] 介绍12&gt; 用来开发响应式布局的 HTML + CSS +JS 的框架&gt; 下载 点击链接下载 1234&gt; &gt; 生产环境版本: 代码已经被压缩过,可以直接放到服务器上部署.&gt; &gt; &gt; &gt; 源代码版本: 代码没有经过压缩,用户可以修改源代码&gt; &gt; 通过link标签可以引用 12&gt; &gt; &lt;link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css\"&gt;&gt; &gt; 通过npm安装 12&gt; &gt; npm install bootstrap&gt; &gt; 开始使用12345678910111213141516171819&gt; 1. 准备工作&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"&gt;&gt; &lt;!-- 保证IE浏览器始终以最新版本渲染 --&gt;&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &gt; 让部分国产浏览器默认采用高速模式渲染页面&gt; &lt;meta name=\"renderer\" content=\"webkit\"&gt;&gt; 2. 在HTML页面中引入Bootstrap对应的CSS文件&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.css\"&gt;&gt; &gt; 3. 例如:&gt; &lt;table class=\"table table-hover\"&gt;&gt; &lt;tr&gt;&gt; &lt;td&gt;123132&lt;/td&gt;&gt; &lt;td&gt;123132&lt;/td&gt;&gt; &lt;td&gt;123132&lt;/td&gt;&gt; &lt;td&gt;123132&lt;/td&gt;&gt; &lt;/tr&gt;&gt; &lt;/table&gt;&gt; 排版 标题123&gt; ☞ 可以直接使用 &lt;h1&gt;&lt;/h1&gt; 到 &lt;h6&gt;&lt;/h6&gt; 标签&gt; ☞ 可以给标签设置 .h1 到 .h6 的类名表示标题&gt; 其他行内元素1234567&gt; ☞ Bootstrap 支持所有HTML标签行内元素&gt; ☞ 例如:&gt; &lt;mark&gt;让文本高亮显示&lt;/mark&gt; | &lt;del&gt; 删除线 &lt;/del&gt; | &lt;s&gt;&lt;/s&gt; &gt; &lt;strong&gt;&lt;/strong&gt; | &lt;em&gt; &lt;/em&gt; ...&gt; ☞ 新标签:&gt; &lt;small&gt;小号文本标签&lt;/small&gt; 或者 .small类名可以实现相同效果&gt; 对齐方式1234&gt; .text-left : 文本左对齐&gt; .text-center: 文本居中对齐&gt; .text-right: 文本右对齐&gt; 改变字母大小写1234&gt; .text-lowercase: 将字母全部转换为小写&gt; .text-uppercase: 将字目全部转换为大写&gt; .text-capitalize: 将首字母转换为大写&gt; 列表1234567891011121314151617&gt; ☞ 去掉列表的默认样式: .list-unstyled&gt; &lt;ul class=\"list-unstyled\"&gt;&gt; &lt;li&gt;&lt;/li&gt; &gt; &lt;/ul&gt;&gt; &gt; ☞ 列表项在一行上显示: .list-inline&gt; &lt;ul class=\"list-inline\"&gt;&gt; &lt;li&gt;&lt;/li&gt;&gt; &lt;li&gt;&lt;/li&gt;&gt; &lt;/ul&gt;&gt; &gt; ☞ 实现水平的自定义列表: .dl-horizontal&gt; &lt;dl class=\"dl-horizontal\"&gt;&gt; &lt;dt&gt;&lt;/dt&gt;&gt; &lt;dd&gt;&lt;/dd&gt;&gt; &lt;/dl&gt; &gt; 表格 样式设置1234567891011121314151617181920212223&gt; ☞ 给table标签添加 table类&gt; &lt;table class=\"table\"&gt;&gt; &lt;/table&gt;&gt; &gt; ☞ 各行变色表格效果添加 table-striped类&gt; &lt;table class=\"table table-striped\"&gt;&gt; &lt;/table&gt;&gt; &gt; ☞ 设置表格边框添加 table-bordered类&gt; &lt;table class=\"table table-bordered\"&gt;&gt; &lt;/table&gt;&gt; &gt; ☞ 设置鼠标悬停时候样式添加 table-hover类&gt; &lt;table class=\"table table-hover\"&gt;&gt; &lt;/table&gt;&gt; &gt; ☞ 设置表格设状态: &gt; &lt;tr class=\"active\"&gt;...&lt;/tr&gt;&gt; &lt;tr class=\"success\"&gt;...&lt;/tr&gt;&gt; &lt;tr class=\"warning\"&gt;...&lt;/tr&gt;&gt; &lt;tr class=\"danger\"&gt;...&lt;/tr&gt;&gt; &lt;tr class=\"info\"&gt;...&lt;/tr&gt;&gt; 响应表格123456789&gt; &lt;div class=\"table-responsive\"&gt;&gt; &lt;table class=\"table\"&gt;&gt; ...&gt; &lt;/table&gt;&gt; &lt;/div&gt;&gt; &gt; 备注:&gt; 必须将表格放到类名是table-responsive的标签中&gt; 表单12345678910111213&lt;div class=\"form-group\"&gt; &lt;label for=\"exampleInputEmail1\"&gt;Emai&lt;/label&gt; &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\"&gt;&lt;/div&gt;&lt;div class=\"form-group\"&gt; &lt;label for=\"exampleInputPassword1\"&gt;密码&lt;/label&gt; &lt;input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"&gt;&lt;/div&gt;总结: 1. 给表单控件设置 类名 form-control 可以实现默认样式的设置 提示信息和表单控件一行上显示12345678910111213&gt; ☞ 为form标签添加 form-inline类名即可&gt; &lt;form class=\"form-inline\"&gt;&gt; &lt;div class=\"form-group\"&gt;&gt; &lt;label for=\"exampleInputName2\"&gt;Name&lt;/label&gt;&gt; &lt;input type=\"text\" class=\"form-control\" id=\"exampleInputName2\" placeholder=\"Jane Doe\"&gt;&gt; &lt;/div&gt;&gt; &lt;/form&gt;&gt; &gt; &gt; 总结:&gt; 1. 让表单中表单控件在一行上显示,给父元素设置form-inline类名&gt; ✔ 必须保证表单控件的类名是form-control 或者 放到一个 form-group的标签中&gt; 多选框1234567&gt; &lt;div class=\"checkbox\"&gt;&gt; &lt;label&gt;&gt; &lt;input type=\"checkbox\" value=\"\"&gt;&gt; Option one is this and that&amp;mdash;be sure to include why it's great&gt; &lt;/label&gt;&gt; &lt;/div&gt;&gt; 单选框1234567&gt; &lt;div class=\"radio\"&gt;&gt; &lt;label&gt;&gt; &lt;input type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" checked&gt;&gt; Option one is this and that&amp;mdash;be sure to include why it's great&gt; &lt;/label&gt;&gt; &lt;/div&gt;&gt; 一行上显示的多选框1234567&gt; &lt;label class=\"checkbox-inline\"&gt;&gt; &lt;input type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\"&gt; 1&gt; &lt;/label&gt;&gt; &lt;label class=\"checkbox-inline\"&gt;&gt; &lt;input type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\"&gt; 2&gt; &lt;/label&gt;&gt; 一行上显示的单选框1234567&gt; &lt;label class=\"radio-inline\"&gt;&gt; &lt;input type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"&gt; 1&gt; &lt;/label&gt;&gt; &lt;label class=\"radio-inline\"&gt;&gt; &lt;input type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"&gt; 2&gt; &lt;/label&gt;&gt; 下拉列表12345678&gt; &lt;select class=\"form-control\"&gt;&gt; &lt;option&gt;1&lt;/option&gt;&gt; &lt;option&gt;2&lt;/option&gt;&gt; &lt;option&gt;3&lt;/option&gt;&gt; &lt;option&gt;4&lt;/option&gt;&gt; &lt;option&gt;5&lt;/option&gt;&gt; &lt;/select&gt;&gt; 按钮12345&gt; &lt;button type=\"button\" class=\"btn btn-default\"&gt;（默认样式）Default&lt;/button&gt;&gt; &lt;button type=\"button\" class=\"btn btn-primary\"&gt;（首选项）Primary&lt;/button&gt;&gt; &lt;button type=\"button\" class=\"btn btn-success\"&gt;（成功）Success&lt;/button&gt;&gt; &lt;button type=\"button\" class=\"btn btn-danger\"&gt;（危险）Danger&lt;/button&gt;&gt; 栅格布局1栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局 使用步骤1234567891011121314151617181920212223242526272829303132&gt; 1. 必须放到类名是 .container 的容器中&gt; &lt;div class=\"container\"&gt;&gt; &lt;div class=\"row\"&gt;&gt; &lt;div class=\"col-md-10\"&gt;.col-md-10&lt;/div&gt;&gt; &lt;div class=\"col-md-2\"&gt;.col-md-2&lt;/div&gt;&gt; &lt;/div&gt;&gt; &lt;/div&gt;&gt; &gt; 2. 设置列数:一共12列&gt; col-xs-number --- 超小屏幕 手机 (&lt;768px)&gt; col-sm-number --- 小屏幕 平板 (≥768px) col-md-number --- 中等屏幕 桌面显示器 (≥992px)&gt; col-lg-number --- 大屏幕 大桌面显示器 (≥1200px) &gt; &gt; 例如:&gt; &lt;div class=\"col-xs-3 col-sm-5\"&gt;&lt;/div&gt; &gt; 在小屏幕占3列 在平板设备下占5列&gt; &gt; 3. 设置列偏移 col-md-offset-number | col-sm-offset-number 从左向右偏移&gt; &gt; 4. 从堆叠到水平排列&gt; ☞ 默认元素独占一行显示 --- 堆叠&gt; ☞ 设置元素占列数,可以在一行上显示 --- 水平排列&gt; &gt; 5. 流式布局 : 让元素的固定宽度为100%布局&gt; &lt;div class=\"container-fluid\"&gt;&lt;/div&gt;&gt; &gt; 6. 列排序&gt; &lt;div class=\"row\"&gt;&gt; &lt;div class=\"col-md-9 col-md-push-3\"&gt;.col-md-9 .col-md-push-3&lt;/div&gt;&gt; &lt;div class=\"col-md-3 col-md-pull-9\"&gt;.col-md-3 .col-md-pull-9&lt;/div&gt;&gt; &lt;/div&gt;&gt;","categories":[],"tags":[]},{"title":"H5C3-12","slug":"H5C3-12","date":"2019-10-16T12:17:21.000Z","updated":"2019-10-16T12:18:02.682Z","comments":true,"path":"2019/10/16/H5C3-12/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-12/","excerpt":"","text":"Rem,媒体查询适配方案Less基础语法介绍 1234&gt; 作用: 维护CSS, 按照CSS的基本语法去写.&gt; &gt; https://less.bootcss.com/&gt; 变量12345678910111213&gt; ☞@自定义变量名: 值;&gt; 例如:&gt; @nav_bgcolor: red;&gt; nav &#123;&gt; color: @nav_bgcolor;&gt; &#125;&gt; &gt; ☞变量的运算:&gt; @width: 10;&gt; nav &#123;&gt; width: @width * 3px;&gt; &#125;&gt; 混合123456789101112131415161718192021222324252627282930313233343536373839&gt; ☞ 定义一个公共的样式(可以式类选择的语法,可以是ID选择器的语法)&gt; &gt; 例如:&gt; .test() &#123;&gt; width: 50px;&gt; height: 50px;&gt; &#125;&gt; &gt; nav &#123;&gt; 调用样式&gt; .test();&gt; &#125;&gt; &gt; header &#123;&gt; .test();&gt; &#125;&gt; &gt; ☞ 可以设置参数&gt; 例如:&gt; .test(@width) &#123;&gt; width: @width;&gt; &#125;&gt; &gt; nav &#123;&gt; .test(100px);&gt; &#125;&gt; &gt; ☞ 可以为参数设置默认值&gt; 例如:&gt; .test(@width: 100px) &#123;&gt; width: @width;&gt; &#125;&gt; nav &#123;&gt; .test();&gt; &#125;&gt; header &#123;&gt; .test(50px);&gt; &#125;&gt; 嵌套123456789&gt; 例如:&gt; nav &#123;&gt; ul &#123;&gt; li &#123;&gt; &gt; &#125;&gt; &#125;&gt; &#125;&gt; 在浏览器中预览LESS文件(了解)12345678910&gt; 1. HTML页面直接沟通link标签引用 less文件&gt; &lt;link rel=\"stylesheet/less\" type=\"text/css\" href=\"less文件.less\"&gt;&gt; &gt; 2. HTML页面中引用用来解析less文件的一个js文件&gt; &lt;script type=\"text/javascript\" src=\"less.js\"&gt;&lt;/script&gt;&gt; &gt; 备注:&gt; 1. 以上执行过程需要在服务器环境下进行&gt; 2. webstorm开发工具下,可以执行运行,因为webstorm自带一个服务器环境&gt; 媒体查询 什么是媒体查询?12345&gt; 1, 媒体指的就是各种设备(移动设备,PC设备)&gt; 2, 查询指的就是要检测属于哪种设备&gt; 总结:&gt; 媒体查询:通过查询当前属于哪种设备,让网页能够在不同的设备下正常的预览&gt; 学习媒体查询的核心是什么?12&gt; 实现页面在不同设备下正常预览.[判断当前设备]&gt; 媒体类型12&gt; 将不同的设备划分为不同的类型,称为媒体类型&gt; all (所有的设备) print (打印设备) screen(电脑屏幕,平板电脑),智能手机 媒体特性12&gt; 用来描述设备的特点,比如宽度,高度...&gt; width 网页显示区域完全等于设置的宽度 height 网页显示区域完全等于设置的高度 max-width / max-height 网页显示区域小于等于设置的宽度 min-width / min-width 网页显示区域大于等于设置的宽度 orientation: portrait (竖屏模式肖像) | landscape (横屏模式全景) 语法关键字12&gt; 目的将媒体类型和媒体特性链接到一块,进行设备检测&gt; and 可以将多个媒体特性链接到一块,相当于且 not 排除某个媒体特性 相当于非,可以省略 only 指定某个特定的媒体类型, 可以省略 语法 外联式语法 12&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"01.css\" media=\"only screen and (max-width: 420px)\"&gt;&gt; 内嵌式语法 123456789&gt; @media only screen and (max-width: 420px) &#123;&gt; body &#123;&gt; background-color: red;&gt; &#125;&gt; &#125;&gt; &gt; 备注: 多个条件联写&gt; @media only screen and (width: 320px) and (height: 568px) &#123;&#125;&gt; Rem 什么是REM?1234&gt; Rem: 是一个单位,是一个相对单位&gt; &gt; em: 是一个单位,是一个相对单位,参照当前文字大小设置的&gt; Rem的特点?12&gt; 参照HTML根标签的文字大小&gt; Rem如何实现适配?12&gt; 1. 常见的UI稿件尺寸大小 640px(20份) 或者 750px(常见)[25份]&gt; 优惠活动综合案例演示适配方案作业: 自己完成苏宁首页头部适配效果","categories":[],"tags":[]},{"title":"H5C3-11","slug":"H5C3-11","date":"2019-10-16T12:16:07.000Z","updated":"2019-10-16T12:17:09.163Z","comments":true,"path":"2019/10/16/H5C3-11/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-11/","excerpt":"","text":"伸缩布局和LESS介绍其他属性介绍 word-break属性介绍1234&gt; 该属性规定自动换行的处理方法。&gt; &gt; normal (按照浏览器默认的换行方式) | break-all | break-all&gt; 文字超出父元素显示省略号1234567891011121314&gt; /* 设置超出部分的显示方式 */&gt; overflow: hidden;&gt; /* 在文字末尾换行 */&gt; word-break: break-all;&gt; /* 文字溢出显示省略号 */&gt; text-overflow: ellipsis;&gt; &gt; /* 用来控制显示行数 */&gt; -webkit-line-clamp: 2;&gt; /* 文字显示方式,默认水平 */&gt; -webkit-box-orient: vertical;&gt; /* 将盒子转为弹性盒子 */&gt; display: -webkit-box;&gt; max-width,min-width属性介绍123456&gt; max-width: 700px; 设置当前元素最大宽度是多少像素 &lt;= 700&gt; min-width: 700px; 设置当前元素最小宽度是多少像素 &gt;= 700&gt; &gt; max-height:&gt; min-height:&gt; 伸缩布局(flex)(屏幕适配) 概念12345&gt; ☞ 伸缩布局[弹性布局]&gt; &gt; Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性.&gt; 任何一个容器都可以指定为 Flex 布局。&gt; 设置盒子为伸缩盒子123456&gt; ☞ display: flex;&gt; 例如:&gt; .box &#123;&gt; display: flex;&gt; &#125;&gt; 伸缩盒子两条轴1234&gt; 主轴(main axis): 默认水平从左向右&gt; &gt; 侧轴(cross axis): 始终垂直于主轴&gt; 设置主轴方向(flex-direction)[掌握]12&gt; flex-direction: row | row-reverse | column | column-reverse&gt; 设置在主轴的对齐方式(justify-content)[掌握]12&gt; justify-content: flex-start(默认值) | flex-end | center | space-between | space-around&gt; 设置在侧轴的对齐方式(align-items )[掌握]12&gt; align-items: flex-start | flex-end | center | baseline | stretch(默认值)&gt; 设置元素是否换行显示(flex-wrap)12&gt; flex-wrap: nowrap | wrap(换行显示)&gt; 设置元素换行后的对齐方式(align-content )12&gt; align-content: flex-start| flex-end | center| space-between | space-around |stretch(默认对齐方式)&gt; 设置子元素的伸缩比(flex )[掌握]123456&gt; flex 属性定义子元素平均分配剩余空间，该子项目占多少份。&gt; &gt; .item &#123;&gt; flex: &lt;number&gt;; /* default 0 */&gt; &#125;&gt; 设置子元素自己的对齐方式(align-self )[了解]123456&gt; ☞ &gt; align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果父元素没有，则等同于stretch。&gt; &gt; ☞&gt; align-self: auto | flex-start | flex-end | center | baseline | stretch;&gt; 设置子元素的排序方式[了解]12&gt; order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。&gt; LESS介绍 维护CSS的弊端12&gt; CSS本质上不是一门语言,是一个简单的样式表.代码维护相对老套,不够灵活.&gt; LESS介绍123456789&gt; ☞LESS预处理器: 依然使用CSS语法，引入了变量，混合，运算, 嵌套等功能，大大简化了 CSS 的编写，并且 降低了 CSS 的维护成本&gt; &gt; &gt; ☞常见的CSS预处理器: Less | SASS | Stylus[staɪləs] 等&gt; &gt; https://less.bootcss.com/&gt; https://www.sass.hk/install/&gt; https://www.zhangxinxu.com/jq/stylus/&gt; 安装及使用 安装Node环境 检测Node是否安装成功 1234&gt; 运行cmd命令输入:&gt; node -v node环境是否安装成功(如果安装成功,会出现版本号)&gt; npm -v 检测包管理工具是否安装成功(如果安装成功,会出现版本号)&gt; 安装Less 123&gt; 运行cmd命令输入:&gt; npm install less -g&gt; 验证less是否安装成功 123&gt; 运行cmd命令输入:&gt; lessc -v &gt; 安装成功后新建一个less文件即可 12&gt; test.less&gt; 将Less文件编译为CSS文件 12345&gt; 运行cmd命令输入:&gt; ☞ 注意: 首先要通过cmd命令进入到当前less文件所在的文件夹目录中&gt; ☞ 编译less文件cmd命令: lessc 要被编译的less文件 要编译为自定义CSS文件&gt; 例如: lessc index.less index.css&gt; 开发工具配置 1234567891011&gt; 1.webstorm自带less编译功能,实时编译&gt; webStorm: 配置快捷键方式进行编译&gt; ◆ 文件 - &gt; 设置 - &gt; 工具 -&gt; file watchers -&gt; 选择less文件点击编辑 -&gt; 取消实时编译选项&gt; ◆ 文件 - &gt; 设置 -&gt; 快捷键 - &gt; 插件 - &gt; File watchers -&gt; 点击右键添加键盘快捷键&gt; &gt; 2.Sublime安装插件: LESS2CSS &gt; &gt; 安装编译插件: ctral+shift+P ---&gt; 在搜索栏中输入 LESS2CSS &gt; &gt; 3.VSCode需要安装插件: Easy Less 安装成功后 Ctrl+s保存即可&gt; Less语法 变量 12345678910111213&gt; ☞@自定义变量名: 值;&gt; 例如:&gt; @nav_bgcolor: red;&gt; nav &#123;&gt; color: @nav_bgcolor;&gt; &#125;&gt; &gt; ☞变量的运算:&gt; @width: 10;&gt; nav &#123;&gt; width: @width * 3px;&gt; &#125;&gt; 混合 12345678910111213141516171819202122232425262728293031323334353637383940&gt; ☞ 定义一个公共的样式(可以式类选择的语法,可以是ID选择器的语法)&gt; &gt; 例如:&gt; .test() &#123;&gt; width: 50px;&gt; height: 50px;&gt; &#125;&gt; &gt; nav &#123;&gt; .test();&gt; &#125;&gt; &gt; header &#123;&gt; .test();&gt; &#125;&gt; &gt; &gt; ☞ 可以设置参数&gt; 例如:&gt; .test(@width) &#123;&gt; width: @width;&gt; &#125;&gt; &gt; nav &#123;&gt; .test(100px);&gt; &#125;&gt; &gt; &gt; ☞ 可以为参数设置默认值&gt; 例如:&gt; .test(@width: 100px) &#123;&gt; width: @width;&gt; &#125;&gt; nav &#123;&gt; .test();&gt; &#125;&gt; header &#123;&gt; .test(50px);&gt; &#125;&gt; 嵌套 123456789&gt; 例如:&gt; nav &#123;&gt; ul &#123;&gt; li &#123;&gt; &gt; &#125;&gt; &#125;&gt; &#125;&gt; 在浏览器中预览LESS文件(了解)12345678910&gt; 1. HTML页面直接沟通link标签引用 less文件&gt; &lt;link rel=\"stylesheet/less\" type=\"text/css\" href=\"less文件.less\"&gt;&gt; &gt; 2. HTML页面中引用用来解析less文件的一个js文件&gt; &lt;script type=\"text/javascript\" src=\"less.js\"&gt;&lt;/script&gt;&gt; &gt; 备注:&gt; 1. 以上执行过程需要在服务器环境下进行&gt; 2. webstorm开发工具下,可以执行运行,因为webstorm自带一个服务器环境&gt;","categories":[],"tags":[]},{"title":"H5C3-10","slug":"H5C3-10","date":"2019-10-16T12:15:18.000Z","updated":"2019-10-16T12:15:53.169Z","comments":true,"path":"2019/10/16/H5C3-10/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-10/","excerpt":"","text":"移动web之屏幕适配(流式布局,百分比布局)私有前缀(了解)1浏览器厂商通常都是在属性名称前添加厂商的私有前缀，来测试这些尚未成为标准的特性。因此，可以借助私有前缀，来解决浏览器对CSS3的兼容性问题。 内核 前缀 主要浏览器 Trident -ms- Internet Explorer Gecko -moz- Firefox Webkit -webkit- Chrome、Opera、Safari、Android Presto -o- 早期Opera 12345678.box&#123; -webkit-transition:all 1s; -moz-transition:all 1s; -ms-transition:all 1s; -o-transition:all 1s; transition:all 1s; &#125;/*推荐使用 先前缀后标准 顺序*/ 屏幕 屏幕尺寸12&gt; 指的是屏幕对角线的长度&gt; 屏幕分辨率(像素)123&gt; 例如: 1366 * 768 px&gt; 指的是在水平方向有1366个像素点,在垂直方向有768个像素点&gt; 长度单位介绍1234&gt; 相对长度单位: px (像素), em ...&gt; &gt; 绝对长度单位: 英寸(in) | 厘米 (cm)&gt; 像素密度(PPI)123456&gt; 概念:&gt; 每英寸所能容纳像素点的个数 (像素密度越大,画面越精细,反之越粗糙)&gt; 备注:&gt; 1. 屏幕尺寸固定大的时候,像素密度越高,单位的像素越小,反之单位像素大小越大&gt; 2. 像素密度一般指 PPI 或者 DPI(在安卓设备上常用)&gt; 设备独立像素(了解)123456&gt; 保证在不同设备上,让用户看到的元素大小一样.&gt; &gt; 设备独立像素本质上就是一个比例关系,不同设备有不同的比例关系如下图:&gt; &gt; 备注: 可以通过js 中 window.devicePixelRatio 获取到当前设备的值&gt; 设备 尺寸(英寸) 开发尺寸(px) 物理像素比(dpr) iphone3G 3.5 320*480 1.0 iphone4/4s 3.5 320*480 2.0 iphone5/5s/5c 4.0 320*568 2.0 HTC One M8 4.5 360*640 3.0 iphone6 4.7 375*667 2.0 Nexus 4 4.7 384*640 2.0 Nexus 5x 5.2 411*731 2.6 iphone6 Plus 5.5 414*736 3.0 Samsung Galaxy Note 4 5.7 480*853 3.0 Sony Xperia Z Ultra 6.4 540*960 2.0 Nexus 7 (‘12) 7.0 600*960 1.3 iPad Mini 7.9 768*1024 2.0 https://material.io/devices/ ,一个设备尺寸统计网站 作为前端开发不建议大家去纠结独立设备像素,像素密度,了解即可.因为它们对我们的开发没有帮助 像素123456&gt; 物理像素:(当前设备的实际宽度和高度)&gt; 屏幕渲染图像的最小单位，属于屏幕的物理属性，不可人为进行改变，其值大小决定了屏幕渲染图像的品质，我们以上所讨论的都指的是物理像素。&gt; &gt; CSS像素:(通过CSS代码设置的宽度和高度)&gt; 通过CSS进行网页布局时用到的单位，其默认值(PC端)是和物理像素保持一致的（1个单位的CSS像素等于1个单位的物理像素），但是我们可通缩放来改变其大小。&gt; 2倍图,3倍图12作用: 保证在不同设备上图片都能正常显示(不会模糊显示) 调试方式 模拟器调试 真机调试(需要在服务器环境下) 视口(viewport)[理解] 1234567891011121314&gt; 用来约束网站中最顶级块元素HTML大小&gt; &gt; 用来预览网页的一个窗口&gt; &gt; PC: 在PC端用来浏览网页的窗口(视口),指的就是我们的浏览器或者屏幕&gt; &gt; 注意:&gt; 在PC端网页布局过程中,网页布局会受视口(浏览器大小,屏幕大小影响)&gt; &gt; 移动端: &gt; 1. 在移动设备上,网页布局不会再受移动设备屏幕尺寸大小的影响&gt; 2. 在移动设备上,视口不再是当前设备屏幕大小(浏览器大小)&gt; 3. 在移动设备上,视口是可以通过程序员自己自定义的,默认视口大小: 980px , 1024px&gt; PC视口123&gt; ☞ 在PC端,浏览器窗口大小会影响HTML大小,进而影响网页布局&gt; ☞ 在PC端视口其实就是我们浏览器大小(在PC端,视口可以影响HTML元素大小)&gt; 移动视口1234&gt; 注意: &gt; 1.在移动设备上,视口不再受浏览器窗口大小影响(在移动设备上浏览器窗口的大小不能影响HTML元素大小)&gt; 2.允许开发者自定义视口的大小,通常设备会有一个默认的视口大小&gt; 屏幕适配(掌握)123456789101112131415&gt; 网页不能出现滚动条和缩放.(控制缩放)&gt; &gt; 解决方式: 通过&lt;meta name = &quot;viewport&quot; content = &quot;&quot;&gt; 设置就可以控制&gt; &gt; ☞ &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt; &gt; width=device-width 宽度等于当前设备宽度,满足多个终端&gt; &gt; ☞ &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1&quot;&gt; &gt; initial-scale=1 不缩放&gt; &gt; ☞ &lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=0&quot;&gt;&gt; user-scalable=0 禁止用户缩放&gt; &gt; ☞ &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=0&quot;&gt;&gt; 其他部分 word-break属性介绍1234&gt; 该属性规定自动换行的处理方法。&gt; &gt; normal (按照浏览器默认的换行方式) | break-all | break-all&gt; 文字超出父元素显示省略号1234567891011121314&gt; /* 设置超出部分的显示方式 */&gt; overflow: hidden;&gt; /* 在文字末尾换行 */&gt; word-break: break-all;&gt; /* 文字溢出显示省略号 */&gt; text-overflow: ellipsis;&gt; &gt; /* 用来控制显示行数 */&gt; -webkit-line-clamp: 2;&gt; /* 文字显示方式,默认水平 */&gt; -webkit-box-orient: vertical;&gt; /* 将盒子转为弹性盒子 */&gt; display: -webkit-box;&gt; max-width,min-width属性介绍123&gt; max-width: &gt; min-width:&gt;","categories":[],"tags":[]},{"title":"H5C3-09","slug":"H5C3-09","date":"2019-10-16T12:13:23.000Z","updated":"2019-10-16T12:15:04.977Z","comments":true,"path":"2019/10/16/H5C3-09/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-09/","excerpt":"","text":"CSS3综合部分2D转换(transform)1转换是CSS3中具有颠覆性的特征之一，可以实现元素的位移、旋转、变形、缩放 位移(改变元素位置) translate(x,y) 12345678910111213141516171819&gt; 定义 2D 转换，沿着 X 和 Y 轴移动元素。&gt; 例如:&gt; .box &#123;&gt; transform: translate(100px, 200px);&gt; &#125;&gt; 使用方式介绍: &gt; 基本写法: &gt; transform: translate(length, length); &gt; 总结: &gt; 1. 最多能设置两个值, 一个值用来改变水平,另外一个一个值用来改变垂直方向&gt; &gt; 2. 如果设置两个值,第一个值代表水平,第二值代表垂直&gt; &gt; 3. 如果希望让元素逆方向移动,可以设置负数&gt; &gt; 4. 通过位移方式改变元素位置,设置的值就是相对元素本身宽度和高度(可以设置百分比)&gt; &gt; 5. 如果设置一个值,那么元素只能在水平方向移动&gt; 2D位移方式实现定位元素居中 12345&gt; position: absolute;&gt; left: 50%;&gt; top: 50%;&gt; transform: translate(-50%, -50%);&gt; 旋转 rotate(angle) 12345678910111213&gt; 定义 2D 旋转，在参数中规定角度。&gt; 基本使用:&gt; transform: rotate(angle)&gt; 总结: &gt; 1. 设置的值代表旋转的角度(单位deg)&gt; 2. 通过设置正负数的方式,控制元素顺时针(正数)或者逆时针旋转(负数)&gt; 3. 可以通过transform-origin改变元素的旋转点位置(倾斜),默认值是center&gt; ✔ 设置方式可以使用以下方式:&gt; transform-origin: left bottom; &gt; transform-origin: 100px 100px;&gt; 例如:&gt; transform: rotate(-45deg);&gt; 总结 123&gt; 1. 旋转圆点 &gt; 2. 顺时针旋转,逆时针旋转&gt; 缩放(改变元素大小) scale(x,y) 12&gt; 定义 2D 缩放转换，改变元素的宽度和高度。&gt; 总结 12345678910&gt; 基本使用方式: &gt; transform: scale(0, 0);&gt; &gt; 总结: &gt; 1. 最多能设置两个值,一个值用来改变宽度,另外一个值用来改变 高度&gt; 2. 设置缩放的时候,不需要带单位,代表的是倍数&gt; 3. 第一个值代表宽度,第二个值代表高度&gt; 4. 如果希望元素缩小,那么设置的值在 0 - 1 之间的小数&gt; 5. 如果设置一个值,代表元素宽度和高度同时放大或者缩小相应的倍数&gt; 总结 1234&gt; 注意: transform 是一个复合属性,如果设置多个值,那么需要按照复合属性的写法去写; &gt; &gt; transform: translate(600px) rotate(360deg) scale(0.5, 0.5);&gt; 3D转换(transform) 3D坐标系 123456789&gt; ☞ 坐标系:&gt; x 轴 : 从左向右&gt; &gt; y 轴: 从上向下&gt; &gt; z 轴: 指向我们自己的眼睛&gt; &gt; ☞ 左手法则:&gt; 位移 translateX(n)12345&gt; 让元素沿着x轴移动&gt; &gt; 正数: 从左向右&gt; 负数: 从右向左&gt; translateY(n)1234&gt; 让元素沿着Y轴移动&gt; 正数: 从上向下&gt; 负数: 从下向上&gt; translateZ(n)1234567891011&gt; 让元素沿着Z轴移动&gt; 正数: 朝向我们视线移动&gt; 负数: 背向移动&gt; 总结:&gt; 1. 3D转换中同样可以设置百分比,依然相对元素自己宽度和高度&gt; 2. 可以通过3D转方式实现元素居中:&gt; position: absolute;&gt; left: 50%;&gt; top: 50%;&gt; transform: translateX(-50%) translateY(-50%);&gt; 3D透视12345&gt; ☞ 近大远小&gt; ☞ perspective设置方式及取值&gt; &gt; ✔ 给设置了transform属性元素的直接父元素设置透视即可&gt; 旋转 rotateX() 12&gt; 沿着x轴旋转&gt; rotateY() 12&gt; 沿着Y轴旋转&gt; rotateZ() 12&gt; 沿着Z轴旋转&gt; 缩放 scaleX() 12&gt; 沿着x轴放到或缩小&gt; scaleY() 12&gt; 沿着Y轴放到或缩小&gt; 动画(animation)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455☞ animation:(补间动画) , 可以让元素始终保存一个动画的效果,不需要用户的动作☞ transition:(补间动画), 必须要有用户的动作,动画才可以执行语法:@keyframes 动画序列名称 &#123; from &#123; 开始状态 &#125; to &#123; 结束状态 &#125;&#125;或者@keyframes 动画序列名称 &#123; 0%&#123; 开始状态 &#125; 100%&#123; 结束状态 &#125;&#125;例如: .one &#123; 动画调用 animation-name: one_move; 动画执行时间 animation-duration: 2s; &#125; /* 定义动画集(序列) */ @keyframes one_move &#123; /* 设置开始状态 */ from &#123; transform: translateX(0px); &#125; /* 设置结束状态 */ to &#123; transform: translateX(800px); &#125; &#125;动画属性合写: animation: move 2s infinite alternate linear 1s; 1. 必须设置 animation-name 和 animation-duration 2. 没有顺序的要求 动画属性 属性 描述 @keyframes 定义动画 animation-name 规定 @keyframes 动画的名称。 animation-duration 规定动画完成一个周期所花费的时间。 animation-timing-function 规定动画的速度曲线。默认是 “ease”。 animation-delay 规定动画何时开始。默认是 0。 animation-iteration-count 规定动画被播放的次数。默认是 1。还有 infinite animation-direction 动画是否在下一周期逆向地播放。默认是 “normal”，alternate逆播放 animation-play-state 规定动画是否正在运行或暂停。默认是 “running”。还有“paused” animation-fill-mode 规定动画结束后状态，保持 forwards 回到起始 backwards animation 所有动画属性的简写属性 私有前缀(了解)1浏览器厂商通常都是在属性名称前添加厂商的私有前缀，来测试这些尚未成为标准的特性。 因此，可以借助私有前缀，来解决浏览器对CSS3的兼容性问题。 内核 前缀 主要浏览器 Trident -ms- Internet Explorer Gecko -moz- Firefox Webkit -webkit- Chrome、Opera、Safari、Android Presto -o- 早期Opera 12345678.box&#123; -webkit-transition:all 1s; -moz-transition:all 1s; -ms-transition:all 1s; -o-transition:all 1s; transition:all 1s; &#125;/*推荐使用 先前缀后标准 顺序*/","categories":[],"tags":[]},{"title":"H5C3-08","slug":"H5C3-08","date":"2019-10-16T12:12:48.000Z","updated":"2019-10-16T12:13:12.199Z","comments":true,"path":"2019/10/16/H5C3-08/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-08/","excerpt":"","text":"08CSS基础核心知识点 精灵图 样式初始化 精灵图12345678910111213☞精灵图： 一张图片【做背景图】☞精灵图的好处： ✔ 提高网页加载速度。☞ 精灵图怎么用？ ✔ 第一步将精灵图作为背景图给标签设置 例如：background-image: url(\"qq.png\"); ✔ 改变背景图位置，向左移动，向上移动 例如： background-position: -602px -160px; 注意： 1. 改变背景图位置的时候，向左移动为负，向上移动为负 样式初始化12345678910☞ 什么是样式初始化？将页面中标签的样式设置为统一的样式☞ 为什么要样式初始化？为了设置网页中标签基本的统一样式，解决不同浏览器的不同渲染效果。☞ 如何设置样式初始化？ ✔ 要将页面中标签自带的样式去掉： margin ，padding, border...✔ 可以将页面中文字大小，文字字体，文字颜色 设置一个统一的样式✔ 网页布局中的代码可以加入到初始化效果中","categories":[],"tags":[]},{"title":"H5C3-07","slug":"H5C3-07","date":"2019-10-16T12:11:55.000Z","updated":"2019-10-16T12:12:26.704Z","comments":true,"path":"2019/10/16/H5C3-07/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-07/","excerpt":"","text":"07CSS基础核心知识点 静态定位 绝对定位 相对定位 固定定位 绝对定位居中方式 定位层级关系 vertical-align属性 元素隐藏 标签包含关系 定位（position）123456789 ☞ 定位： 与元素的位置有关系 ☞ 作用: 通过网页布局（画盒子），使用定位摆放盒子位置。☞ 语法： position: 具体的定位方式； left: 20px righ：20px top： 20px bottom: 20px 静态定位（static）【了解】123456☞ 语法： position: static;☞ 特点： 1. 元素的默认显示方式就是静态定位【静态定位的元素就是标准流的默认显示方式】 2. 静态定位无法改变元素位置 绝对定位(absolute)【重点掌握】123456789101112☞ 语法： position: absolute; left | right | top | bottom: 值; ☞ 特点： 1. 可以通过绝对定位改变元素位置 2. 如果一个元素设置了绝对定位，默认会以body【浏览器】左上角为参照进行位置改变 3. 如果一个子元素是绝对定位，如果其父元素设置了除静态定位以外的其他定位，那么该绝对定位的子元素就会参照父元素左上角进行位置改变。 4. 绝对定位可以让元素脱标不占位置 ☞使用场景： ✔ 在网页布局中（结构中），如果我们发现有一个标签（盒子） 压着 另外一个标签（盒子）。 我们需要用到绝对定位 相对定位（relative）【重点掌握】12345678910111213141516 ☞ 语法： position:relative; left | right | top | bottom: 值; ☞特点： 1. 可以改变元素位置 2. 相对定位的元素与父元素是否是定位的元素无关 3. 相对定位的元素是相对元素自己原来的位置 4. 相对定位的元素没有脱标☞相对定位使用场景： ✔ 一般情况下，只要子元素设置了绝对定位后，父元素就要设置相对定位【子绝父相】 1. 因为给父元素设置了相对定位后，绝对定位的子元素会以父元素为参照 2. 父元素是相对定位的时候，父元素没有脱标，父元素占位置 3. 子元素设置了绝对定位，父元素就设置相对定位 固定定位（fixed）【重点掌握】1234567891011☞ 语法：position: fixed;left | right | top | bottom: 值; ☞ 特点： 1. 可以改变元素位置 2. 固定定位的元素始终都是以body（浏览器）左上角为参照设置位置。 3. 固定定位的元素也是脱标不占位置的元素 ☞ 使用场景： 1. 网页中的广告 绝对定位居中【重点掌握】12345678910☞ margin: 0 auto； 只能让标准流下的盒子居中显示 ☞ 如何实现绝对定位盒子居中： ✔ 先通过 left | right | top | bottom ： 50% 【相对父元素移动一半】 ✔ 通过margin 设置负数 移动 当前元素宽度或高度一半 position: absolute; left: 50%; top: 50%; margin-left: -50px; margin-top: -50px; 定位层级关系【重点掌握】123456789☞ 注意：✔只有定位的元素才有层级关系【标准流元素和浮动的元素都没有成绩关系】☞ 总结： 1. 如果一个元素设置了定位（除静态定位），那么该元素的层级就要比其他元素的层级高 2. 如果希望提高元素的层级，那么给定位的元素设置 z-index 属性，提高层级 3. 如果元素都设置了定位，那么最后的定位元素的层级比前面定位的元素的层级要高【后来居上】 4. 如果z-index值不同，那么值越大该元素的层级越高，反之层级越低【可以设置负数】 5. 如果一个元素的父元素也设置了定位，那么层级关系的高低，以父元素为准。 vertical-align属性【了解】1234567891011121314151617181920212223242526272829303132333435363738394041424344☞ vertical-align 设置垂直方向的对齐方式。☞ text-align 设置水平方向的对齐方式☞vertical-align属性： baseline (默认值) | top | middle | bottom ☞ 使用该属性解决网页中的效果： 1. 解决图片底部3像素空白【由于图片默认的垂直对齐方式是基线对齐导致】 ✔设置图片的对齐方式不是基线对齐即可 ✔ 将图片转换为块级元素 2. 使用vertical-align属性实现插入图片垂直居中效果 ✔第一步设置行高等于容器的高度 ✔设置图片的垂直对齐方式为middle 3. 对齐方式： span &#123; height: 100%; width: 0px; display: inline-block; vertical-align: middle;&#125;img &#123; vertical-align: middle;&#125;或者： .box::after &#123; content: \"\"; display: inline-block; height: 100%; width: 0px; vertical-align: middle;&#125;img &#123; vertical-align: middle;&#125;☞ 注意： vertical-align属性只有行内块元素或者table标签才能设置 元素隐藏【了解】12345678910☞ 元素隐藏： 将页面中的元素隐藏。☞ 直接将页面中的元素隐藏：✔ display: none; ---隐藏元素，不占位置display：block; ---显示元素✔ visibility: hidden; ---隐藏元素，占位置隐藏☞ 设置页面中溢出部分隐藏： ✔ overflow: visible(可见) | hidden | scroll（添加滚动条） | auto （自动） 标签包含关系【了解】12341. 单标签不能包含其他标签（*）2. 段落标签中不能包含标题标签（*）3. 段落标签中不能放div（*）4. 行内元素包含行内元素","categories":[],"tags":[]},{"title":"H5C3-06","slug":"H5C3-06","date":"2019-10-16T12:11:19.000Z","updated":"2019-10-16T12:11:43.800Z","comments":true,"path":"2019/10/16/H5C3-06/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-06/","excerpt":"","text":"06CSS基础核心知识点 边框圆角 盒子阴影 伪元素 浮动 清除浮动 边框圆角1234567☞ border-radius: 20px;☞ border-radius； 注意： 1. 在设置 border-radius的时候，如果只设置一个值，那么代表垂直半径和当前设置的水平半径是一样的 2. 如果希望设置一个椭圆的效果，那么只要设置水平半径和垂直半径不一样即可。 伪元素（理解，灵活使用）123456789101112☞ 伪元素： 假的html标签☞ 伪元素分类 1. before 2. after☞ 伪元素总结： 1. 伪元素属于行内元素 2. 伪元素必须设置content属性 3. 伪元素before和after在用法上一模一样 4. before属于结构中最开始的位置，after属于结构中结束的位置 5. 伪元素只能作为子元素存在 浮动（float）标准流123456☞ 标准流：在网页中浏览器渲染标签的时候，标签默认的显示方式就是标准流。 1. 例如块级元素默认就应该独占一行显示 2. 行内元素在一行上显示 3. 在标准流的作用下，行内元素就是不能设置宽度和高度。。。。 浮动1234567891011121314 ☞ 使用： float: left | right; ☞ 浮动的特点: 1. 由于浮动改变了原来元素的默认显示方式 （脱标） 2. 浮动可以让元素脱标不占位置 ☞ 浮动作用: 1. 在网页布局中，如果要让块级元素在一行上显示，就设置浮动。 2. 在制作网页导航的时候必须使用浮动 3. 网页布局（通过浮动摆放盒子位置）☞ 总结： 1. 在网页布局中，要让块级元素在一行上显示，必须给这些元素都设置浮动 清除浮动123☞ 什么时候需要清除浮动？ 1. 如果父元素没有设置高度 2. 并且该父元素中的所有子元素都设置了浮动 使用clear属性清除浮动12☞ 在浮动元素的后面 添加一个空的div标签☞ 给该空标签设置属性: clear:both| right | left| 使用overflow属性清除浮动1234 ☞ 给父元素设置overflow：hidden; ----bfc 注意：1. 如果父元素中没有超出父元素的的元素，可以使用该方式 使用伪元素清除浮动(推荐的方式)123456789101112 .clearfix::after &#123; content: \"\"; display: block; height: 0px; line-height: 0px; clear: both; visibility: hidden;&#125;.clearfix &#123; /* 兼容IE */ *zoom: 1;&#125;","categories":[],"tags":[]},{"title":"H5C3-05","slug":"H5C3-05","date":"2019-10-16T12:10:11.000Z","updated":"2019-10-16T12:11:04.553Z","comments":true,"path":"2019/10/16/H5C3-05/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-05/","excerpt":"","text":"05CSS基础核心知识点 盒子模型 边框 内边距 外边距 边框圆角 盒子阴影 line-height(行高)123456☞ 如果我们希望改变文字的上下间距,我们可以设置行高☞ 如果希望单行文字垂直居中,使用行高. 行高=容器的高度☞ 行高= 文字大小 + 上下间距☞ 为什么行高等于容器的高度就可以实现文字垂直居中? 盒子模型1234567891011121314☞ 什么盒子? ☞ 用来包含其他内容的标签----&gt;盒子 ☞ 在网页中任何一个双标签都可以是一个盒子 ☞ 在网页布局中,所谓的盒子都特指 div 和 span☞ 为什么要学盒子? 1. 为了网页布局 2. 网页布局的本质就是在画盒子 ☞盒子模型组成 1. 内容区域 2. 边框（border) 3. 内边距（padding): 用来设置内容和边框之间的距离,本质其实在改变内容区域的位置 4. 外边距（margin): 盒子与盒子之间的距离,本质是在改变盒子的位置 内容区域1盒子的内容区域: 指的就是我们设置宽度和高度 边框(border)1234567891011121314151617181920212223242526272829303132333435☞ 边框样式: border-style : none | solid | dashed | dotted☞ 边框宽度: border-width☞ 边框颜色: border-color☞ 边框合写: border: red 5px solid; ◆ 必须设置border-style ◆ 没有顺序的要求☞ 总结: 1. 单独设置每条边框样式: border-top: 5px solid red; border-left: 5px solid red; border-right: 5px dotted red; border-bottom: 1px dashed yellow; 2. 去掉边框 border-style: none | border: none | border: 0 none 3. 单独去掉某条边框:border-top: none; | border-left: none; | border-right: none; | border-bottom: none; 4. 表单控件中的轮廓线 outline-style: none; 5. 合并表格中的边框 /* 合并边框 该属性只能在表格中使用 */ border-collapse: collapse; 内边距（padding）1234567891011121314151617☞ 内边距: 内容与盒子边框之间的距离,用来改变盒子中内容区域的位置.☞ 设置方式: padding-left: 50px; padding-top: 50px; padding-right: 50px; padding-bottom: 50px; 1. padding合写: /* 上,右, 下,左内边距10px */ padding: 10px; /* 上下10px ,左右内边距20px */ padding: 10px 20px; /* 上10px ,左右内边距20px 下30px*/ padding: 10px 20px 30px; /* 上10px ,右内边距20px 下30px 左40px*/ padding: 10px 20px 30px 40px; 盒子大小计算问题12345盒子实际大小 = 内容区域 + 内边距 + 边框☞ 总结: 1. 如果我们确定了盒子实际大小之后,我们又给盒子设置了内边距或者边框,必须做减法 2. 如果我们不确定盒子实际大小,那么设置内边距或者边框的时候,不用做减法 外边距（margin）1234567891011121314151617181920212223242526☞外边距: 盒子与盒子之间的距离,不会改变盒子大小,只会改变盒子位置.☞设置方式: margin-left: 100px; margin-top: 100px; margin-right: 100px; margin-bottom: 100px;☞ 合写: /* 上,右, 下,左外边距10px */ margin: 10px; /* 上下10px ,左右外边距20px */ margin: 10px 20px; /* 上10px ,左右外边距20px 下30px*/ margin: 10px 20px 30px; /* 上10px ,右外边距20px 下30px 左40px*/ margin: 10px 20px 30px 40px;☞ 外边距塌陷: 当给子元素设置 margin-top的时候,父元素移动了 1. 给父元素设置边框 2. 给父元素设置overflow:hidden;☞ 外边距合并: 当给元素设置 上下外边距的时候,外边距会以最大值为准 盒子模型总结121. 如果要改变的是内容区域的位置,那么可以用padding2. 如果要改变的是盒子的位置,那么用margin 边框圆角（扩展）盒子阴影（扩展）","categories":[],"tags":[]},{"title":"H5C3-04","slug":"H5C3-04","date":"2019-10-16T12:09:32.000Z","updated":"2019-10-16T12:10:01.709Z","comments":true,"path":"2019/10/16/H5C3-04/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-04/","excerpt":"","text":"04CSS基础核心知识点 并集选择器 元素显示模式 元素模式转换 CSS特性 伪类 背景 文字阴影 元素显示方式123☞ 块级元素☞ 行内元素☞ 行内块元素 块级元素1234567☞ 代表:div, p, ul,ol,dl,li,dd,h1,h2..... ☞ 特点: 1. 如果一个块级元素没有设置宽度,那么其宽度等于父元素的宽度.(只有块级元素才有特点) 2. 所有的块级元素都是独占一行显示,与宽度无关 3. 可以设置宽和高度 行内元素123456☞ 代表:span, a, font,strong,em,i....☞ 特点: 1. 所有的行内元素都在一行上显示 2. 行内元素不能设置宽度和高度(行内元素特有的特点) 行内块元素123456☞ 代表:img,input ☞ 特点: 1. 元素在一行上显示. 2. 可以设置宽度和高度 元素模式转换转块级元素1display: block; 转行内块元素1display: inline-block; 转行内元素1234display: inline;(比较少用)总结： 1. 在网页中如果希望一个行内元素要设置宽度和高度的情况下，要进行模式转换 2. 如果希望元素在一行上显示，就转换为行内块，如果希望元素独占一行显示就转换为块级元素 CSS特性【理解】层叠性12345/* 层叠性 1. 必须使用同一个选择器选中一个标签 2. 最后定义的样式会将前面定义的样式(重复的部分)覆盖*/ 继承性123456789101112131415161718☞ 继承性必须在嵌套结构的标签中才有发生.☞ 总结:/* 继承性 1. 给父元素设置样式 2. 子元素默认没有样式 3. 子元素按照父元素的样式去设置 */☞ 总结可以被继承的属性: 1. color属性可以被继承 2. font中的所有属性都可以被继承☞ 不可以被继承的属性: width heigth 优先级12345标签选择器 &lt; 类选择器 &lt; ID选择器 &lt; 行内样式 &lt; !important 10 100 1000 10000 10000+☞ 特点: 1. 继承的权重为0 2. 权重可以叠加(如果使用了不通的选择器,都选中的是同一个标签,考虑使用权重叠加计算解决) 伪类选择器12345678910111213141516171819☞ 目的: 用来选中标签◆:link &#123;&#125; 用来设置链接的样式(不推荐使用,有兼容性)◆:visited &#123;&#125; 用来设置标签被访问过后的样式(不推荐使用,1. 该选择器中只能设置与颜色相关的属性 2. 有浏览器缓存问题)◆ 必须掌握:hover &#123;&#125; 用来设置鼠标悬停到标签上时候的样式◆:active &#123;&#125; 用来设置标签被激活时候的样式(使用情况比较少)◆ 必须掌握:focus &#123;&#125; 用来设置获取鼠标焦点时候的样式 背景（background）12345678910111213141516171819202122232425262728293031☞ 背景是一个复合选择器: 属性可以联写☞ 背景颜色background-color☞ 背景图background-image: url(\"2.png\");☞设置背景是否平铺background-repeat: repeat(默认平铺) | no-repeat (不平铺) | repeat-x | repeat-y☞ 改变背景图片位置background-position: 1. 可以直接设置具体的方位名称(left | right | top | bottom | center) background-position: center center; 2. 可以自定义改变背景图片位置,设置具体值 background-position: 20px 80px; 总结: 1. 如果background-position中设置了具体值,第一个值代表水平方向 2. 如果background-position只设置一个值,第二个值默认代表center☞ 属性合写 background: red url(\"2.png\") no-repeat 20px 50px; 注意: 1. 没有个数的限制 2. 没有顺序的限制 文字阴影12345678910111213141516171819☞ 给文字加阴影效果/* 设置文字阴影 1. 第一个值代表 阴影在水平方向的偏移 2. 第一个值代表 阴影在垂直方向的偏移 3. 第一个值代表 阴影模糊度 4. 颜色 */text-shadow: 0px 0px 10px red;☞ 设置多个文字阴影text-shadow: 0px 0px 10px red, 5px 5px 10px blue, -5px -5px 10px yellow; 行高实现单行文字垂直居中1文字垂直居中: 行高=容器的高度","categories":[],"tags":[]},{"title":"H5C3-03","slug":"H5C3-03","date":"2019-10-16T12:08:12.000Z","updated":"2019-10-16T12:09:19.236Z","comments":true,"path":"2019/10/16/H5C3-03/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-03/","excerpt":"","text":"03CSS基础核心知识点 基础选择器 复合选择器 font属性合写 CSS概念123☞ 层叠样式表或者叫级联样式表(英文全称：Cascading Style Sheets)。☞ 层叠：指的是css一个特性 CSS语法12345678910111213141516171819☞ 选择器 &#123; 属性: 值; 属性: 值;&#125;☞ 选择器: 选中标签☞ 属性: 通过选中标签,给标签加样式☞ 总结CSS中常见的属性: color属性: 用来设置文字颜色[前景色] font-size属性: 用来设置文字大小 width属性: 用来设置标签宽度 height属性: 用来设置标签高度 background-color属性: 用来设置背景颜色/* 文字内容居中 */text-align: center; 内容居中(文字,图片)text-indent: 2em; 设置首行缩进 CSS书写位置12345678910111213141516171819☞ 内嵌式写法: 在html页面内写CSS代码 (学习阶段推荐使用) &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 内嵌式写法 --&gt; &lt;style type=\"text/css\"&gt; CSS代码 &lt;/style&gt; &lt;/head&gt;☞ 外联式: 将css代码和html代码分开了(综合项目的时候推荐使用这种方法) 1. 新建一个css文件,文件后缀名是 .css 2. 通过link标签将外部的css文件引入到html页面中 &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"test.css\"&gt; ☞行内式: 将css代码写到标签内部(如果标签要设置的属性比较少,可以考虑使用行内样式写法) &lt;p style=\"属性: 值; 属性: 值;\"&gt;&lt;/p&gt; CSS基础选择器标签选择器（重点理解）1234567☞ 通过HTML标签名选中对应的标签☞ 语法HTMl标签名 &#123; 属性: 值; 属性: 值;&#125; 类选择器（重点掌握）12345678 1. 定义一个类样式 .自定义类名 &#123; 属性: 值; &#125;2. 标签通过class属性调用类样式&lt;p class=\"自定义类名\"&gt;&lt;/p&gt; 类选择器命名规范123☞ 定义类名不能以数字开头☞ 不能以特殊符号开头定义类名☞ 不推荐使用汉字定义类名 类选择器特点1234☞ 一个类样式可以被任意的标签调用☞ 一个标签可以调用多个类样式&lt;div class=\"one two \"&gt;1&lt;/div&gt; ID选择器（理解）1234567891011121314151617181920212223242526☞ 选中对应的ID1. #自定义id名 &#123; 属性: 值;&#125;2. 标签通过ID属性调用&lt;p id=\"自定义id名\"&gt;&lt;/p&gt;例如:/* ID选择器 */#div_box &#123; width: 200px; height: 200px; background-color: red;&#125;&lt;div id=\"div_box\"&gt;&lt;/div&gt;☞ ID选择器与类选择器的区别: ◆ 一个id样式只能对应一个标签 ◆ 一个标签只能调用一个ID样式 通配符选择器（理解）12345678语法:* &#123; 属性: 值; 属性: 值;&#125;特点: 将页面中所有的标签都选中 颜色表示方式(了解)预定义方式12 十六进制方式[表示任意的颜色]1 RGB方式(颜色的表示方式)1 RGBA方式12 font复合属性介绍12345678910111213141516171819202122☞ 文字大小: font-size: ☞ 设置文字是否加粗:font-weight: 700(bold) | normal(400) ☞ 设置文字是否斜体显示:font-style: normal | italic(斜体显示)☞ 设置文字字体: font-family: \"微软雅黑\";☞ 设置文字行高: 调整文字的上下间距 line-height: 40px;☞ font属性合写介绍: /* font合写 */ font: 700 italic 30px/100px \"微软雅黑\"; ◆font合写的时候只用font属性 ◆font合写的时候,必须设置font-size 和 font-family ◆font合写的时候,font-size必须在font-family之前 ◆font合写的时候,如果要设置line-height,那么该属性必须写到 font-size/line-height 复合选择器后代选择器【掌握】12 子代选择器【理解】1 标签指定式选择器【理解】1 并集选择器【理解】1","categories":[],"tags":[]},{"title":"H5C3-02","slug":"H5C3-02","date":"2019-10-16T12:06:46.000Z","updated":"2019-10-16T12:07:56.475Z","comments":true,"path":"2019/10/16/H5C3-02/","link":"","permalink":"http://yoursite.com/2019/10/16/H5C3-02/","excerpt":"","text":"02HTML基础核心知识点 link标签 meta标签 列表 表格 表单 网页布局标签 实体字符（了解） link标签123456789101112131415161718☞ 设置网页图标☞ 注意事项： 1. 图标格式最好是.ico 也可以是其他的图片格式（png,jpg） 2. 设置网页图标使用的link标签必须放到head标签中 3. 网页图标一般直接放到项目的根目下☞ 设置网页图标方式: &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 设置网页图标 --&gt; &lt;link rel=\"icon\" href=\"favicon.ico\"&gt; &lt;/head&gt; meta标签12&lt;!-- 防止网页出现乱码 --&gt;&lt;meta charset=\"UTF-8\"&gt; 列表（掌握）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455 ☞ 无序列表(unordered-list) &lt;ul&gt; &lt;li&gt; 列表项 &lt;/li&gt; &lt;li&gt; 列表项 &lt;/li&gt; ... &lt;/ul&gt;总结： 1. ul列表必须直接包含的标签是li 2. 在li标签中可以包含其他任何标签 3. 在展示数据的时候没有先后顺序的要求例如：&lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; ☞ 有序列表： (order-list) &lt;ol&gt; &lt;li&gt; &lt;/li&gt; &lt;li&gt; &lt;/li&gt; &lt;li&gt; &lt;/li&gt; &lt;/ol&gt; 总结： 1. 有序列表在展示数据的时候是按照一定的顺序显示的 2. 有序列表在用法上与无序列表一样。 例如： &lt;ol&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;蔚来第二款SUV ES6实车谍照曝光&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt; ☞ 自定义列表(defined-list)&lt;dl&gt; &lt;dt&gt; &lt;/dt&gt; &lt;dd&gt; 列表项 &lt;/dd&gt; &lt;dd&gt; 列表项 &lt;/dd&gt; &lt;dd&gt; 列表项 &lt;/dd&gt;&lt;/dl&gt;总结： 一般在网页的结尾处会使用该列表 表格（掌握）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109 ☞ 作用： 1. 最开始（没有css之前）进行网页布局 2. 用来展示数据☞ 写法： ◆ 组成 行 tr 列 td 表格 table ◆ 写法： &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; ◆ 表格中的属性级其他标签介绍： 1. border属性： 设置边框 2. width属性： 改变宽度 3. height属性： 改变高度 4. 去掉td与td之间的距离 cellspacing的默认是2 5. 设置内容居中显示 align: left | center | right ◆如果希望表格中的内容对齐，那么将align属性设置给tr或者td ◆如果将align属性设置给table，只能改变table整体的对齐方式，不会影响内容的对齐方式 6. 如果希望给表格设置表头，那么请使用th标签替代td标签，th在表格中就是表示表头，默认实现文字居中加粗显示 7. 设置背景颜色属性： bgcolor=\"颜色\"； 8. 设置表格的标题： &lt;caption&gt;人员信息表&lt;/caption&gt; &lt;table border=\"1\" width=\"400\" height=\"400\" cellspacing=\"0\" align=\"center\" bgcolor=\"pink\"&gt; &lt;caption&gt;人员信息表&lt;/caption&gt; &lt;tr bgcolor=\"red\"&gt; &lt;th bgcolor=\"green\"&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;职业&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;/tr&gt; &lt;/table&gt; 注意： 1. 在浏览器中所有的元素（文字，图片），默认都是左对齐 ☞表格其他部分介绍（了解） 1.表格的标准的结构写法： &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;/table&gt; 总结： 1. 如果按照规范写法，会在一些低版本浏览器中出现兼容性问题（IE低版本） 2. 在高版本浏览器中，浏览器默认会自动帮我们添加主体 ☞ 表格合并单元格： 1. 横向合并： colspan=\"2\" 2. 纵向合并： rowspan=\"3\" &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td colspan=\"2\"&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td rowspan=\"3\"&gt;&lt;/td&gt; &lt;/tr&gt; 备注： 1. 合并单元格后，将多余的行或者列删掉 表单（掌握）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112 ☞ 作用： 收集信息(通过表单控件收集信息) ☞ 表单组成： 1. 表单域 （form） 2. 提示信息 3. 表单控件 ☞ 表单域（form）: ◆属性 action 设置一个后台程序，处理表单控件中的数据 ◆属性 method 设置一个提交数据方式 （get | post） &lt;form action=\"1.js\" method=\"post\"&gt; 用户名: &lt;input type=\"text\" name=\"username\"&gt; &lt;br&gt; &lt;br&gt; 密码: &lt;input type=\"password\" name=\"pwd\"&gt; &lt;br&gt; &lt;br&gt; &lt;input type=\"submit\" name=\"\"&gt; &lt;/form&gt; ☞ 表单控件： 1. 输入框：&lt;input type=\"text\"&gt; 属性： name设置控件名称 maxlength设置当前控件最多能输入多少个字符 readonly=\"readonly\" 设置当前控件为只读模式（不能输入） disabled=\"disabled\" 当前控件没有被渲染成功（没有被激活）【不能输入】 value设置控件默认值 2. 密码输入框： &lt;input type=\"password\" name=\"\" value=\"\"&gt; 属性：与输入框的属性一样 3. 下拉列表框： &lt;select&gt; &lt;optgroup label=\"中国\"&gt; &lt;option&gt;北京&lt;/option&gt; &lt;option&gt;上海&lt;/option&gt; &lt;option&gt;南京&lt;/option&gt; &lt;option&gt;河北&lt;/option&gt; &lt;/optgroup&gt; &lt;/select&gt; 或者： &lt;select&gt; &lt;option&gt;北京&lt;/option&gt; &lt;option&gt;上海&lt;/option&gt; &lt;option&gt;南京&lt;/option&gt; &lt;option&gt;河北&lt;/option&gt; &lt;/select&gt; 属性： selected=\"selected\" 设置默认选中项 例如： &lt;option&gt;北京&lt;/option&gt; &lt;option&gt;上海&lt;/option&gt; &lt;option selected=\"selected\"&gt;南京&lt;/option&gt; &lt;option&gt;河北&lt;/option&gt; 4. 复选框： &lt;input type=\"checkbox\"&gt; 属性： checked=\"checked\" 设置默认选中项 &lt;input type=\"checkbox\" checked=\"checked\"&gt;爱好 &lt;input type=\"checkbox\" checked=\"checked\"&gt;旅游 &lt;input type=\"checkbox\" checked=\"checked\"&gt;学习 5. 单选控件：&lt;input type=\"radio\"&gt; 注意： 1. 如果要实现单选效果，那么需要设置相同的name值 &lt;input type=\"radio\" name=\"abc\"&gt;男 &lt;input type=\"radio\" name=\"abc\"&gt;女 2. checked=\"checked\" 设置默认选中项6. 上传控件： &lt;input type=\"file\"&gt;7. 文本域：&lt;textarea&gt;&lt;/textarea&gt; 8. 提交表单数据： &lt;input type=\"submit\"&gt; &lt;input type=\"image\" name=\"\" src=\"按钮.jpg\"&gt;9. 重置按钮： 将表单控件中的值恢复到默认值 &lt;input type=\"reset\" name=\"\"&gt;10. 普通按钮： &lt;input type=\"button\" value=\"按钮\"&gt; 不能提交数据，可以和js配合使用","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-19T06:17:18.316Z","updated":"2019-09-19T06:17:18.316Z","comments":true,"path":"2019/09/19/hello-world/","link":"","permalink":"http://yoursite.com/2019/09/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"H5C3-01","slug":"H5C3-01","date":"2018-10-16T12:04:03.000Z","updated":"2019-10-16T12:41:59.205Z","comments":true,"path":"2018/10/16/H5C3-01/","link":"","permalink":"http://yoursite.com/2018/10/16/H5C3-01/","excerpt":"","text":"01-HTML标签核心知识点 网页组成 网页规范 HTML结构[重点] 单标签 双标签 认识网页网页组成123网页是由: 文字,图片,输入框,按钮,视频,音频....元素组成的总结: 网页就是由HTML组成的 网页规范(万维网联盟)123☞ 结构标准: 制作网页必须按照HTMl的标准结构去写网页☞ 表现标准: 用来美化网页CSS☞ 行为标准: 用来实现网页中的用户的一些动作处理 JavaScript 浏览器介绍主流浏览器 内核（渲染引擎）1234567891011121314Trident(IE内核)： IE、傲游、世界之窗浏览器、Avant、腾讯TT、猎豹安全浏览器、360极速浏览器、百度浏览器等Gecko(firefox)： Gecko(Firefox 内核)： Mozilla FireFox(火狐浏览器) 采用该内核，Gecko 的特点是代码完全公开，因此，其可开发程度很高webkit(Safari): Safari 是苹果公司开发的浏览器，所用浏览器内核的名称是大名鼎鼎的 WebKit。傲游浏览器3、 Apple Safari (Win/Mac/iPhone/iPad)、Symbian手机浏览器、Android 默认浏览器。Blink： 大部分国产浏览器最新版都采用Blink内核。二次开发。谷歌浏览器。Blink 其实是 WebKit 的分支。 Presto(Opera) ： Presto（已经废弃） 是挪威产浏览器 opera 的 \"前任\" 内核，为何说是 \"前任\"，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。 HTML(重点)概念12345☞ HTML： Hyper Text Markup Language.[ 超文本标记语言 ] 超文本: 本质就是一个文本[在网页中,用来实现页面跳转的文本 ---超链接标签] 标记: 记号. [各种HTML标签] 结构1234567891011注意: 1. 我们在以后写代码(html,css,js...)遇到特殊符号,必须都是英文输入下的符号. 2. 制作一个网页必须按照html的结构去写.&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; 结构详解123456789&lt;!doctype html&gt; -----&gt; 用来告诉浏览器文档类型, 该标签最好不要去掉.如果将该标签去掉之后,浏览器会出现一只怪异模式[浏览器不确定到底按照哪种渲染方式去渲染显示网页]&lt;html&gt;&lt;/html&gt; -----&gt; 根标签&lt;head&gt;&lt;/head&gt; -----&gt; 设置网页中基本的配置内容(网页的标题,网页中的样式,网页中的js代码效果....)&lt;title&gt;&lt;/title&gt; -----&gt; 设置网页标题&lt;body&gt;&lt;/body&gt; -----&gt; 代表的是网页主体[在网页中除去地址栏看到的任何信息都要放到body标签中] 标签之间的关系12345☞ 嵌套关系: 一个标签包含其他标签 [父元素和子元素]☞ 并列关系: 标签之间不存在嵌套包含 例如: &lt;head&gt;&lt;/head&gt; 和 &lt;body&gt;&lt;/body&gt; 标签写法分类12345678☞ 双标签: 有开始和结束的标签. 总结: 1. 如果页面中出现嵌套关系,父元素一定是双标签,子元素可以是双标签或者单标签☞ 单标签: 只有开始没有结束 总结: 1. 单独标签一定不能作为父元素. 单标签1234567☞ 换行标签: &lt;br&gt;☞ 横线: &lt;hr&gt;☞ 文档类型: &lt;!doctype html&gt; ☞ 注释标签: &lt;!-- 内容 --&gt; ctrl + / 双标签123456☞ 标题标签: &lt;h1&gt;&lt;/h1&gt; - &lt;h6&gt;&lt;/h6&gt; 注意: 一个网页中的标题,最好只出现一次一号标题.☞ 段落标签: &lt;p&gt;&lt;/p&gt; 注意: 段落标签中不能设置数字 格式化（修饰）标签[双标签]12345678910111213☞ 设置文字颜色或者设置文字大小: &lt;font&gt;&lt;/font&gt; 1. 改变文字颜色需要添加color属性 &lt;font color=\"red\"&gt;我是红颜色的文字&lt;/font&gt; 2. 改变文字大小需要添加size属性 &lt;font color=\"orange\" size=\"7\"&gt;我是红颜色的文字&lt;/font&gt;☞ 设置文字是否加粗: &lt;strong&gt; &lt;/strong&gt; 或者 &lt;b&gt; &lt;/b&gt;☞ 设置文字斜体显示: &lt;em&gt;&lt;/em&gt; 或者 &lt;i&gt; &lt;/i&gt;☞ 设置文字删除线效果: &lt;del&gt;&lt;/del&gt; 或者 &lt;s&gt;&lt;/s&gt;☞ 设置文字下划线效果: &lt;ins&gt;&lt;/ins&gt; 或者 &lt;u&gt;&lt;/u&gt; 图片标签【多媒体标签】1234567☞ 图片标签: &lt;img&gt;☞ 属性: src:设置要显示的图片路径 &lt;img src=\"1.jpg\"&gt;. width: 设置标签宽度. height: 设置标签高度. title: 鼠标悬停到图片上的文字提示. alt: 当图片无法正常显示时候的文字提示. 视频标签1234567891011☞ video用来显示视频☞ 属性: src: 设置显示视频路径 controls: 显示控制栏 loop: 控制视频循环播放 autoplay: 自动播放 解决视频或音频标签自动播放在谷歌浏览器中不起作用: 在chrome 浏览器中输入：chrome://flags 再搜索audio,找到Autoplay policy 再在右侧的选项中设置为 no user gesture is required 即可 音频标签123☞ audio用来播放音频用法与video标签一样.&lt;audio src=\"See You Again.mp3\" autoplay&gt;&lt;/audio&gt; 路径（重点）12345678☞ 绝对路径: 1. 如果路径中包含具体的磁盘目录: d:/img/1.jpg 2. 如果路径中具有具体的网址: www.baidu.com/img/1.jpg☞ 相对路径: 必须在同一个根目录下.1. 如果当前页面和被访问的资源在同一个文件夹中,路径=直接设置文件名称 2. 如果当前页面在被访问资源的上一级目录中, 路径=文件所在的文件夹名称/文件名 3. 如果当前页面在被访问资源的下一级目录中,路径=../文件名称 超链接1234567本质: 就是用来实现页面跳转.&lt;a href=\"目标页面路径\"&gt;&lt;/a&gt;属性: target:设置目标页面打开方式(默认在当前页面中打开_self | _blank 新窗口中打开)总结: 如果希望当前页面中所有超链接跳转页面的时候,都在新窗口中打开,那么只需要在head标签中设置 base标签,给base标签设置target属性即可. 锚链接123本质: 在当前页面中跳转. 网页中的返回顶部效果&lt;a href=\"#\"&gt;&lt;/a&gt;\"#\": 返回当前页面开始位置","categories":[],"tags":[]}]}